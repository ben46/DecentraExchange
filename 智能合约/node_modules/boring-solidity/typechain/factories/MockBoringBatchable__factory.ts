/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBoringBatchable,
  MockBoringBatchableInterface,
} from "../MockBoringBatchable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506127106000469050620000318160a081815250620000c560201b60201c565b6080818152505050600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156200007457600080fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508060038190555050620001d3565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692188230604051602001620000fe939291906200014e565b604051602081830303815290604052805190602001209050919050565b62000126816200018b565b82525050565b62000137816200019f565b82525050565b6200014881620001c9565b82525050565b60006060820190506200016560008301866200012c565b6200017460208301856200013d565b6200018360408301846200011b565b949350505050565b60006200019882620001a9565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60805160a051611bdc620001f760003980610ed4525080610f095250611bdc6000f3fe60806040526004361061009c5760003560e01c80637c516e94116100645780637c516e94146101ae5780637ecebe00146101d7578063a9059cbb14610214578063d2423b5114610251578063d505accf1461026d578063dd62ed3e146102965761009c565b8063095ea7b3146100a157806318160ddd146100de57806323b872dd146101095780633644e5151461014657806370a0823114610171575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c391906112cc565b6102d3565b6040516100d59190611785565b60405180910390f35b3480156100ea57600080fd5b506100f36103c5565b604051610100919061197a565b60405180910390f35b34801561011557600080fd5b50610130600480360381019061012b91906111df565b6103cb565b60405161013d9190611785565b60405180910390f35b34801561015257600080fd5b5061015b610771565b60405161016891906117a0565b60405180910390f35b34801561017d57600080fd5b506101986004803603810190610193919061117a565b610780565b6040516101a5919061197a565b60405180910390f35b3480156101ba57600080fd5b506101d560048036038101906101d09190611360565b610798565b005b3480156101e357600080fd5b506101fe60048036038101906101f9919061117a565b610819565b60405161020b919061197a565b60405180910390f35b34801561022057600080fd5b5061023b600480360381019061023691906112cc565b610831565b6040516102489190611785565b60405180910390f35b61026b60048036038101906102669190611308565b610a9e565b005b34801561027957600080fd5b50610294600480360381019061028f919061122e565b610ba2565b005b3480156102a257600080fd5b506102bd60048036038101906102b891906111a3565b610ea7565b6040516102ca919061197a565b60405180910390f35b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103b3919061197a565b60405180910390a36001905092915050565b60035481565b60008082146107015760008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561045a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104519061193a565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16146106ff576000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105fc5783811015610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f906118da565b60405180910390fd5b838103600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561066c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610663906118ba565b60405180910390fd5b8382036000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550505b505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161075e919061197a565b60405180910390a3600190509392505050565b600061077b610ecc565b905090565b60006020528060005260406000206000915090505481565b8773ffffffffffffffffffffffffffffffffffffffff1663d505accf888888888888886040518863ffffffff1660e01b81526004016107dd9796959493929190611716565b600060405180830381600087803b1580156107f757600080fd5b505af115801561080b573d6000803e3d6000fd5b505050505050505050505050565b60026020528060005260406000206000915090505481565b6000808214158061086d57508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15610a2f5760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156108f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ef9061193a565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a2d57600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561099b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610992906118ba565b60405180910390fd5b8281036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b505b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a8c919061197a565b60405180910390a36001905092915050565b60005b83839050811015610b9c57600060603073ffffffffffffffffffffffffffffffffffffffff16868685818110610ad357fe5b9050602002810190610ae59190611995565b604051610af39291906116c4565b600060405180830381855af49150503d8060008114610b2e576040519150601f19603f3d011682016040523d82523d6000602084013e610b33565b606091505b509150915081158015610b435750835b15610b8d57610b5181610f2f565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b849190611898565b60405180910390fd5b50508080600101915050610aa1565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415610c12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c099061191a565b60405180910390fd5b834210610c54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4b906118fa565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff166001610d167f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b8a8a8a600260008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050558b604051602001610cfb969594939291906117bb565b60405160208183030381529060405280519060200120610f9a565b85858560405160008152602001604052604051610d369493929190611853565b6020604051602081039080840390855afa158015610d58573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614610db8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daf9061195a565b60405180910390fd5b84600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92587604051610e96919061197a565b60405180910390a350505050505050565b6001602052816000526040600020602052806000526040600020600091509150505481565b6000804690507f00000000000000000000000000000000000000000000000000000000000000008114610f0757610f028161100a565b610f29565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b6060604482511015610f78576040518060400160405280601d81526020017f5472616e73616374696f6e2072657665727465642073696c656e746c790000008152509050610f95565b60048201915081806020019051810190610f929190611412565b90505b919050565b60006040518060400160405280600281526020017f1901000000000000000000000000000000000000000000000000000000000000815250610fda610ecc565b83604051602001610fed939291906116dd565b604051602081830303815290604052805190602001209050919050565b60007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a7946921882306040516020016110419392919061181c565b604051602081830303815290604052805190602001209050919050565b60008135905061106d81611b45565b92915050565b60008083601f84011261108557600080fd5b8235905067ffffffffffffffff81111561109e57600080fd5b6020830191508360208202830111156110b657600080fd5b9250929050565b6000813590506110cc81611b5c565b92915050565b6000813590506110e181611b73565b92915050565b6000813590506110f681611b8a565b92915050565b600082601f83011261110d57600080fd5b815161112061111b82611a19565b6119ec565b9150808252602083016020830185838301111561113c57600080fd5b611147838284611af7565b50505092915050565b60008135905061115f81611ba1565b92915050565b60008135905061117481611bb8565b92915050565b60006020828403121561118c57600080fd5b600061119a8482850161105e565b91505092915050565b600080604083850312156111b657600080fd5b60006111c48582860161105e565b92505060206111d58582860161105e565b9150509250929050565b6000806000606084860312156111f457600080fd5b60006112028682870161105e565b93505060206112138682870161105e565b925050604061122486828701611150565b9150509250925092565b600080600080600080600060e0888a03121561124957600080fd5b60006112578a828b0161105e565b97505060206112688a828b0161105e565b96505060406112798a828b01611150565b955050606061128a8a828b01611150565b945050608061129b8a828b01611165565b93505060a06112ac8a828b016110d2565b92505060c06112bd8a828b016110d2565b91505092959891949750929550565b600080604083850312156112df57600080fd5b60006112ed8582860161105e565b92505060206112fe85828601611150565b9150509250929050565b60008060006040848603121561131d57600080fd5b600084013567ffffffffffffffff81111561133757600080fd5b61134386828701611073565b93509350506020611356868287016110bd565b9150509250925092565b600080600080600080600080610100898b03121561137d57600080fd5b600061138b8b828c016110e7565b985050602061139c8b828c0161105e565b97505060406113ad8b828c0161105e565b96505060606113be8b828c01611150565b95505060806113cf8b828c01611150565b94505060a06113e08b828c01611165565b93505060c06113f18b828c016110d2565b92505060e06114028b828c016110d2565b9150509295985092959890939650565b60006020828403121561142457600080fd5b600082015167ffffffffffffffff81111561143e57600080fd5b61144a848285016110fc565b91505092915050565b61145c81611a77565b82525050565b61146b81611a89565b82525050565b61147a81611a95565b82525050565b61149161148c82611a95565b611b2a565b82525050565b60006114a38385611a50565b93506114b0838584611ae8565b82840190509392505050565b60006114c782611a45565b6114d18185611a5b565b93506114e1818560208601611af7565b6114ea81611b34565b840191505092915050565b600061150082611a45565b61150a8185611a6c565b935061151a818560208601611af7565b80840191505092915050565b6000611533601683611a5b565b91507f45524332303a206e6f207a65726f2061646472657373000000000000000000006000830152602082019050919050565b6000611573601883611a5b565b91507f45524332303a20616c6c6f77616e636520746f6f206c6f7700000000000000006000830152602082019050919050565b60006115b3600e83611a5b565b91507f45524332303a20457870697265640000000000000000000000000000000000006000830152602082019050919050565b60006115f3601883611a5b565b91507f45524332303a204f776e65722063616e6e6f74206265203000000000000000006000830152602082019050919050565b6000611633601683611a5b565b91507f45524332303a2062616c616e636520746f6f206c6f77000000000000000000006000830152602082019050919050565b6000611673601883611a5b565b91507f45524332303a20496e76616c6964205369676e617475726500000000000000006000830152602082019050919050565b6116af81611ad1565b82525050565b6116be81611adb565b82525050565b60006116d1828486611497565b91508190509392505050565b60006116e982866114f5565b91506116f58285611480565b6020820191506117058284611480565b602082019150819050949350505050565b600060e08201905061172b600083018a611453565b6117386020830189611453565b61174560408301886116a6565b61175260608301876116a6565b61175f60808301866116b5565b61176c60a0830185611471565b61177960c0830184611471565b98975050505050505050565b600060208201905061179a6000830184611462565b92915050565b60006020820190506117b56000830184611471565b92915050565b600060c0820190506117d06000830189611471565b6117dd6020830188611453565b6117ea6040830187611453565b6117f760608301866116a6565b61180460808301856116a6565b61181160a08301846116a6565b979650505050505050565b60006060820190506118316000830186611471565b61183e60208301856116a6565b61184b6040830184611453565b949350505050565b60006080820190506118686000830187611471565b61187560208301866116b5565b6118826040830185611471565b61188f6060830184611471565b95945050505050565b600060208201905081810360008301526118b281846114bc565b905092915050565b600060208201905081810360008301526118d381611526565b9050919050565b600060208201905081810360008301526118f381611566565b9050919050565b60006020820190508181036000830152611913816115a6565b9050919050565b60006020820190508181036000830152611933816115e6565b9050919050565b6000602082019050818103600083015261195381611626565b9050919050565b6000602082019050818103600083015261197381611666565b9050919050565b600060208201905061198f60008301846116a6565b92915050565b600080833560016020038436030381126119ae57600080fd5b80840192508235915067ffffffffffffffff8211156119cc57600080fd5b6020830192506001820236038313156119e457600080fd5b509250929050565b6000604051905081810181811067ffffffffffffffff82111715611a0f57600080fd5b8060405250919050565b600067ffffffffffffffff821115611a3057600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000611a8282611ab1565b9050919050565b60008115159050919050565b6000819050919050565b6000611aaa82611a77565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611b15578082015181840152602081019050611afa565b83811115611b24576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b611b4e81611a77565b8114611b5957600080fd5b50565b611b6581611a89565b8114611b7057600080fd5b50565b611b7c81611a95565b8114611b8757600080fd5b50565b611b9381611a9f565b8114611b9e57600080fd5b50565b611baa81611ad1565b8114611bb557600080fd5b50565b611bc181611adb565b8114611bcc57600080fd5b5056fea164736f6c634300060c000a";

export class MockBoringBatchable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBoringBatchable> {
    return super.deploy(overrides || {}) as Promise<MockBoringBatchable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockBoringBatchable {
    return super.attach(address) as MockBoringBatchable;
  }
  connect(signer: Signer): MockBoringBatchable__factory {
    return super.connect(signer) as MockBoringBatchable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBoringBatchableInterface {
    return new utils.Interface(_abi) as MockBoringBatchableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBoringBatchable {
    return new Contract(address, _abi, signerOrProvider) as MockBoringBatchable;
  }
}
