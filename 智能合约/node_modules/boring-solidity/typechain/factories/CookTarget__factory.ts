/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CookTarget, CookTargetInterface } from "../CookTarget";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onCook",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610267806100206000396000f3fe60806040526004361061001e5760003560e01c8063bde402cf14610023575b600080fd5b61003d600480360381019061003891906100d5565b610054565b60405161004b929190610175565b60405180910390f35b6000606060016040518060200160405280600081525091509150935093915050565b60008135905061008581610243565b92915050565b60008083601f84011261009d57600080fd5b8235905067ffffffffffffffff8111156100b657600080fd5b6020830191508360018202830111156100ce57600080fd5b9250929050565b6000806000604084860312156100ea57600080fd5b60006100f886828701610076565b935050602084013567ffffffffffffffff81111561011557600080fd5b6101218682870161008b565b92509250509250925092565b610136816101d3565b82525050565b6000610147826101a5565b61015181856101b0565b93506101618185602086016101ff565b61016a81610232565b840191505092915050565b600060408201905061018a600083018561012d565b818103602083015261019c818461013c565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006101cc826101df565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101561021d578082015181840152602081019050610202565b8381111561022c576000848401525b50505050565b6000601f19601f8301169050919050565b61024c816101c1565b811461025757600080fd5b5056fea164736f6c634300060c000a";

export class CookTarget__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CookTarget> {
    return super.deploy(overrides || {}) as Promise<CookTarget>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CookTarget {
    return super.attach(address) as CookTarget;
  }
  connect(signer: Signer): CookTarget__factory {
    return super.connect(signer) as CookTarget__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CookTargetInterface {
    return new utils.Interface(_abi) as CookTargetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CookTarget {
    return new Contract(address, _abi, signerOrProvider) as CookTarget;
  }
}
