/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockBoringMath,
  MockBoringMathInterface,
} from "../MockBoringMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "a",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "b",
        type: "uint128",
      },
    ],
    name: "add128",
    outputs: [
      {
        internalType: "uint128",
        name: "c",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "a",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "b",
        type: "uint32",
      },
    ],
    name: "add32",
    outputs: [
      {
        internalType: "uint32",
        name: "c",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "a",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "b",
        type: "uint64",
      },
    ],
    name: "add64",
    outputs: [
      {
        internalType: "uint64",
        name: "c",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "mul",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "sub",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "a",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "b",
        type: "uint128",
      },
    ],
    name: "sub128",
    outputs: [
      {
        internalType: "uint128",
        name: "c",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "a",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "b",
        type: "uint32",
      },
    ],
    name: "sub32",
    outputs: [
      {
        internalType: "uint32",
        name: "c",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "a",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "b",
        type: "uint64",
      },
    ],
    name: "sub64",
    outputs: [
      {
        internalType: "uint64",
        name: "c",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "to128",
    outputs: [
      {
        internalType: "uint128",
        name: "c",
        type: "uint128",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "to32",
    outputs: [
      {
        internalType: "uint32",
        name: "c",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
    ],
    name: "to64",
    outputs: [
      {
        internalType: "uint64",
        name: "c",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ddc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a88fa6ed11610071578063a88fa6ed146102d7578063b67d77c514610341578063c7c7dd261461038d578063c8a4ac9c146103e1578063edc91f2f1461042d578063f9256885146104af576100b4565b8063125c86dd146100b957806317c64b8b146101015780631bfc1aa81461018357806359111d83146101cf578063771602f71461022d5780637f7d31dd14610279575b600080fd5b6100e5600480360360208110156100cf57600080fd5b8101908080359060200190929190505050610519565b604051808263ffffffff16815260200191505060405180910390f35b61015b6004803603604081101561011757600080fd5b8101908080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff16906020019092919050505061052b565b60405180826fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101af6004803603602081101561019957600080fd5b810190808035906020019092919050505061055a565b604051808267ffffffffffffffff16815260200191505060405180910390f35b610211600480360360408110156101e557600080fd5b81019080803563ffffffff169060200190929190803563ffffffff16906020019092919050505061056c565b604051808263ffffffff16815260200191505060405180910390f35b6102636004803603604081101561024357600080fd5b81019080803590602001909291908035906020019092919050505061058f565b6040518082815260200191505060405180910390f35b6102bb6004803603604081101561028f57600080fd5b81019080803563ffffffff169060200190929190803563ffffffff1690602001909291905050506105ac565b604051808263ffffffff16815260200191505060405180910390f35b610321600480360360408110156102ed57600080fd5b81019080803567ffffffffffffffff169060200190929190803567ffffffffffffffff1690602001909291905050506105cf565b604051808267ffffffffffffffff16815260200191505060405180910390f35b6103776004803603604081101561035757600080fd5b8101908080359060200190929190803590602001909291905050506105f6565b6040518082815260200191505060405180910390f35b6103b9600480360360208110156103a357600080fd5b8101908080359060200190929190505050610613565b60405180826fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610417600480360360408110156103f757600080fd5b810190808035906020019092919080359060200190929190505050610625565b6040518082815260200191505060405180910390f35b6104876004803603604081101561044357600080fd5b8101908080356fffffffffffffffffffffffffffffffff16906020019092919080356fffffffffffffffffffffffffffffffff169060200190929190505050610642565b60405180826fffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104f9600480360360408110156104c557600080fd5b81019080803567ffffffffffffffff169060200190929190803567ffffffffffffffff169060200190929190505050610671565b604051808267ffffffffffffffff16815260200191505060405180910390f35b600061052482610698565b9050919050565b600061055282846fffffffffffffffffffffffffffffffff1661073e90919063ffffffff16565b905092915050565b6000610565826107e5565b9050919050565b6000610587828463ffffffff1661088f90919063ffffffff16565b905092915050565b60006105a4828461091e90919063ffffffff16565b905092915050565b60006105c7828463ffffffff166109a190919063ffffffff16565b905092915050565b60006105ee828467ffffffffffffffff16610a3090919063ffffffff16565b905092915050565b600061060b8284610ac790919063ffffffff16565b905092915050565b600061061e82610b4a565b9050919050565b600061063a8284610bfc90919063ffffffff16565b905092915050565b600061066982846fffffffffffffffffffffffffffffffff16610c9190919063ffffffff16565b905092915050565b6000610690828467ffffffffffffffff16610d3890919063ffffffff16565b905092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff63ffffffff16821115610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f426f72696e674d6174683a2075696e743332204f766572666c6f77000000000081525060200191505060405180910390fd5b819050919050565b6000826fffffffffffffffffffffffffffffffff168284039150816fffffffffffffffffffffffffffffffff1611156107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f426f72696e674d6174683a20556e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff67ffffffffffffffff16821115610887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f426f72696e674d6174683a2075696e743634204f766572666c6f77000000000081525060200191505060405180910390fd5b819050919050565b60008163ffffffff1682840191508163ffffffff161015610918576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f426f72696e674d6174683a20416464204f766572666c6f77000000000000000081525060200191505060405180910390fd5b92915050565b600081828401915081101561099b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f426f72696e674d6174683a20416464204f766572666c6f77000000000000000081525060200191505060405180910390fd5b92915050565b60008263ffffffff1682840391508163ffffffff161115610a2a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f426f72696e674d6174683a20556e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b60008267ffffffffffffffff1682840391508167ffffffffffffffff161115610ac1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f426f72696e674d6174683a20556e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b6000828284039150811115610b44576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f426f72696e674d6174683a20556e646572666c6f77000000000000000000000081525060200191505060405180910390fd5b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6fffffffffffffffffffffffffffffffff16821115610bf4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f426f72696e674d6174683a2075696e74313238204f766572666c6f770000000081525060200191505060405180910390fd5b819050919050565b600080821480610c195750828283850292508281610c1657fe5b04145b610c8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f426f72696e674d6174683a204d756c204f766572666c6f77000000000000000081525060200191505060405180910390fd5b92915050565b6000816fffffffffffffffffffffffffffffffff168284019150816fffffffffffffffffffffffffffffffff161015610d32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f426f72696e674d6174683a20416464204f766572666c6f77000000000000000081525060200191505060405180910390fd5b92915050565b60008167ffffffffffffffff1682840191508167ffffffffffffffff161015610dc9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f426f72696e674d6174683a20416464204f766572666c6f77000000000000000081525060200191505060405180910390fd5b9291505056fea164736f6c634300060c000a";

export class MockBoringMath__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockBoringMath> {
    return super.deploy(overrides || {}) as Promise<MockBoringMath>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockBoringMath {
    return super.attach(address) as MockBoringMath;
  }
  connect(signer: Signer): MockBoringMath__factory {
    return super.connect(signer) as MockBoringMath__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBoringMathInterface {
    return new utils.Interface(_abi) as MockBoringMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBoringMath {
    return new Contract(address, _abi, signerOrProvider) as MockBoringMath;
  }
}
