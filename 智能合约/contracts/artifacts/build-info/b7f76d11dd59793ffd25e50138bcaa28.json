{
	"id": "b7f76d11dd59793ffd25e50138bcaa28",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Token01.sol": {
				"content": "pragma solidity =0.6.6;\n\nimport './IERC20.sol';\n// import './SafeMath.sol';\n\ncontract Token01 is IERC20 {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    address private _owner;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor() public {\n        _name = \"token01\";\n        _symbol = \"token01\";\n        _owner = msg.sender;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = msg.sender;\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = msg.sender;\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = msg.sender;\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = msg.sender;\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = msg.sender;\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(owner, spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    function mint(address account, uint256 amount) public{\n        require(_owner == msg.sender);\n        _mint(account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        // max int\n        if (currentAllowance != 115792089237316195423570985008687907853269984665640564039457584007913129639935) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n\n                _approve(owner, spender, currentAllowance - amount);\n\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}"
			},
			"contracts/IERC20.sol": {
				"content": "pragma solidity =0.6.6;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x8fcc19d09f8cd633b2d4af928f4855f129d1d6a58e12c7481d920b863df4afba\",\"urls\":[\"bzz-raw://1687c7b71217e6ac6b00e441c8207327034f489547bd0bd592237425e9776833\",\"dweb:/ipfs/QmSJpbE3LVoMjeJCbRbuLYNRBg9yDDyG2kgvmkE3hhfVWU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Token01.sol": {
				"Token01": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}.     * The default value of {decimals} is 18. To select a different value for {decimals} you should overload it.     * All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden;     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.     * Requirements:     * - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * NOTE: Does not update the allowance if the current allowance is the maximum `uint256`.     * Requirements:     * - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/Token01.sol\":77:11745  contract Token01 is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Token01.sol\":657:770  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n  pop\n    /* \"contracts/Token01.sol\":688:705  _name = \"token01\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x07\n  dup1\n  dup3\n  mstore\n  shl(0xc8, 0x746f6b656e3031)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_4\n  swap2\n    /* \"contracts/Token01.sol\":688:693  _name */\n  0x03\n  swap2\n    /* \"contracts/Token01.sol\":688:705  _name = \"token01\" */\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"contracts/Token01.sol\":715:734  _symbol = \"token01\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x07\n  dup1\n  dup3\n  mstore\n  shl(0xc8, 0x746f6b656e3031)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_6\n  swap2\n    /* \"contracts/Token01.sol\":715:722  _symbol */\n  0x04\n  swap2\n    /* \"contracts/Token01.sol\":715:734  _symbol = \"token01\" */\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/Token01.sol\":744:750  _owner */\n  0x05\n    /* \"contracts/Token01.sol\":744:763  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Token01.sol\":753:763  msg.sender */\n  caller\n    /* \"contracts/Token01.sol\":744:763  _owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/Token01.sol\":77:11745  contract Token01 is IERC20 {... */\n  jump(tag_7)\ntag_5:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_9\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_11)\ntag_9:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_11\n  jumpi\n  swap2\n  dup3\n  add\ntag_10:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_10)\ntag_11:\n  pop\n  tag_12\n  swap3\n  swap2\n  pop\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n  swap1\n  jump\t// out\ntag_13:\n  tag_14\n  swap2\n  swap1\ntag_15:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_15)\ntag_14:\n  swap1\n  jump\t// out\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Token01.sol\":77:11745  contract Token01 is IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/Token01.sol\":77:11745  contract Token01 is IERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/Token01.sol\":835:933  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_18:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_18)\n    tag_20:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/Token01.sol\":835:933  function name() public view virtual override returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_21\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_21:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token01.sol\":3110:3305  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_23:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":3110:3305  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_24\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Token01.sol\":1923:2029  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Token01.sol\":3867:4151  function transferFrom(... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x60\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_28:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":3867:4151  function transferFrom(... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_29\n      jump\t// in\n        /* \"contracts/Token01.sol\":1772:1863  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/Token01.sol\":4546:4778  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_33:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":4546:4778  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_34\n      jump\t// in\n        /* \"contracts/Token01.sol\":7689:7820  function mint(address account, uint256 amount) public{... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_36:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":7689:7820  function mint(address account, uint256 amount) public{... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/Token01.sol\":2087:2212  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_39:\n      pop\n        /* \"contracts/Token01.sol\":2087:2212  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"contracts/Token01.sol\":1046:1148  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_16\n      tag_42\n      jump\t// in\n        /* \"contracts/Token01.sol\":5265:5656  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":5265:5656  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_49\n      jump\t// in\n        /* \"contracts/Token01.sol\":2408:2595  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_13:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":2408:2595  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n        /* \"contracts/Token01.sol\":2653:2802  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x40\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":2653:2802  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_55\n      jump\t// in\n        /* \"contracts/Token01.sol\":835:933  function name() public view virtual override returns (string memory) {... */\n    tag_17:\n        /* \"contracts/Token01.sol\":921:926  _name */\n      0x03\n        /* \"contracts/Token01.sol\":914:926  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Token01.sol\":889:902  string memory */\n      0x60\n      swap4\n        /* \"contracts/Token01.sol\":914:926  return _name */\n      swap1\n      swap3\n        /* \"contracts/Token01.sol\":921:926  _name */\n      swap1\n      swap2\n        /* \"contracts/Token01.sol\":914:926  return _name */\n      dup4\n      add\n        /* \"contracts/Token01.sol\":921:926  _name */\n      dup3\n        /* \"contracts/Token01.sol\":914:926  return _name */\n      dup3\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Token01.sol\":835:933  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Token01.sol\":3110:3305  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"contracts/Token01.sol\":3193:3197  bool */\n      0x00\n        /* \"contracts/Token01.sol\":3225:3235  msg.sender */\n      caller\n        /* \"contracts/Token01.sol\":3245:3277  _approve(owner, spender, amount) */\n      tag_61\n        /* \"contracts/Token01.sol\":3225:3235  msg.sender */\n      dup2\n        /* \"contracts/Token01.sol\":3261:3268  spender */\n      dup6\n        /* \"contracts/Token01.sol\":3270:3276  amount */\n      dup6\n        /* \"contracts/Token01.sol\":3245:3253  _approve */\n      tag_62\n        /* \"contracts/Token01.sol\":3245:3277  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_61:\n      pop\n        /* \"contracts/Token01.sol\":3294:3298  true */\n      0x01\n      swap4\n        /* \"contracts/Token01.sol\":3110:3305  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token01.sol\":1923:2029  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"contracts/Token01.sol\":2010:2022  _totalSupply */\n      sload(0x02)\n        /* \"contracts/Token01.sol\":1923:2029  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Token01.sol\":3867:4151  function transferFrom(... */\n    tag_29:\n        /* \"contracts/Token01.sol\":3994:3998  bool */\n      0x00\n        /* \"contracts/Token01.sol\":4028:4038  msg.sender */\n      caller\n        /* \"contracts/Token01.sol\":4048:4086  _spendAllowance(from, spender, amount) */\n      tag_65\n        /* \"contracts/Token01.sol\":4064:4068  from */\n      dup6\n        /* \"contracts/Token01.sol\":4028:4038  msg.sender */\n      dup3\n        /* \"contracts/Token01.sol\":4079:4085  amount */\n      dup6\n        /* \"contracts/Token01.sol\":4048:4063  _spendAllowance */\n      tag_66\n        /* \"contracts/Token01.sol\":4048:4086  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/Token01.sol\":4096:4123  _transfer(from, to, amount) */\n      tag_67\n        /* \"contracts/Token01.sol\":4106:4110  from */\n      dup6\n        /* \"contracts/Token01.sol\":4112:4114  to */\n      dup6\n        /* \"contracts/Token01.sol\":4116:4122  amount */\n      dup6\n        /* \"contracts/Token01.sol\":4096:4105  _transfer */\n      tag_68\n        /* \"contracts/Token01.sol\":4096:4123  _transfer(from, to, amount) */\n      jump\t// in\n    tag_67:\n      pop\n        /* \"contracts/Token01.sol\":4140:4144  true */\n      0x01\n      swap5\n        /* \"contracts/Token01.sol\":3867:4151  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token01.sol\":1772:1863  function decimals() public view virtual override returns (uint8) {... */\n    tag_31:\n        /* \"contracts/Token01.sol\":1854:1856  18 */\n      0x12\n        /* \"contracts/Token01.sol\":1772:1863  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Token01.sol\":4546:4778  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_34:\n        /* \"contracts/Token01.sol\":4634:4638  bool */\n      0x00\n        /* \"contracts/Token01.sol\":4666:4676  msg.sender */\n      caller\n        /* \"contracts/Token01.sol\":4686:4750  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_61\n        /* \"contracts/Token01.sol\":4666:4676  msg.sender */\n      dup2\n        /* \"contracts/Token01.sol\":4702:4709  spender */\n      dup6\n        /* \"contracts/Token01.sol\":4739:4749  addedValue */\n      dup6\n        /* \"contracts/Token01.sol\":4711:4736  allowance(owner, spender) */\n      tag_72\n        /* \"contracts/Token01.sol\":4666:4676  msg.sender */\n      dup4\n        /* \"contracts/Token01.sol\":4702:4709  spender */\n      dup4\n        /* \"contracts/Token01.sol\":4711:4720  allowance */\n      tag_55\n        /* \"contracts/Token01.sol\":4711:4736  allowance(owner, spender) */\n      jump\t// in\n    tag_72:\n        /* \"contracts/Token01.sol\":4711:4749  allowance(owner, spender) + addedValue */\n      add\n        /* \"contracts/Token01.sol\":4686:4694  _approve */\n      tag_62\n        /* \"contracts/Token01.sol\":4686:4750  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/Token01.sol\":7689:7820  function mint(address account, uint256 amount) public{... */\n    tag_37:\n        /* \"contracts/Token01.sol\":7760:7766  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"contracts/Token01.sol\":7770:7780  msg.sender */\n      caller\n        /* \"contracts/Token01.sol\":7760:7780  _owner == msg.sender */\n      eq\n        /* \"contracts/Token01.sol\":7752:7781  require(_owner == msg.sender) */\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/Token01.sol\":7752:7781  require(_owner == msg.sender) */\n    tag_74:\n        /* \"contracts/Token01.sol\":7791:7813  _mint(account, amount) */\n      tag_75\n        /* \"contracts/Token01.sol\":7797:7804  account */\n      dup3\n        /* \"contracts/Token01.sol\":7806:7812  amount */\n      dup3\n        /* \"contracts/Token01.sol\":7791:7796  _mint */\n      tag_76\n        /* \"contracts/Token01.sol\":7791:7813  _mint(account, amount) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/Token01.sol\":7689:7820  function mint(address account, uint256 amount) public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token01.sol\":2087:2212  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":2187:2205  _balances[account] */\n      and\n        /* \"contracts/Token01.sol\":2161:2168  uint256 */\n      0x00\n        /* \"contracts/Token01.sol\":2187:2205  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Token01.sol\":2087:2212  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Token01.sol\":1046:1148  function symbol() public view virtual override returns (string memory) {... */\n    tag_42:\n        /* \"contracts/Token01.sol\":1134:1141  _symbol */\n      0x04\n        /* \"contracts/Token01.sol\":1127:1141  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Token01.sol\":1102:1115  string memory */\n      0x60\n      swap4\n        /* \"contracts/Token01.sol\":1127:1141  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/Token01.sol\":1134:1141  _symbol */\n      swap1\n      swap2\n        /* \"contracts/Token01.sol\":1127:1141  return _symbol */\n      dup4\n      add\n        /* \"contracts/Token01.sol\":1134:1141  _symbol */\n      dup3\n        /* \"contracts/Token01.sol\":1127:1141  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n        /* \"contracts/Token01.sol\":5265:5656  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_49:\n        /* \"contracts/Token01.sol\":5358:5362  bool */\n      0x00\n        /* \"contracts/Token01.sol\":5390:5400  msg.sender */\n      caller\n        /* \"contracts/Token01.sol\":5358:5362  bool */\n      dup2\n        /* \"contracts/Token01.sol\":5437:5462  allowance(owner, spender) */\n      tag_83\n        /* \"contracts/Token01.sol\":5390:5400  msg.sender */\n      dup3\n        /* \"contracts/Token01.sol\":5454:5461  spender */\n      dup7\n        /* \"contracts/Token01.sol\":5437:5446  allowance */\n      tag_55\n        /* \"contracts/Token01.sol\":5437:5462  allowance(owner, spender) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/Token01.sol\":5410:5462  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/Token01.sol\":5500:5515  subtractedValue */\n      dup4\n        /* \"contracts/Token01.sol\":5480:5496  currentAllowance */\n      dup2\n        /* \"contracts/Token01.sol\":5480:5515  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/Token01.sol\":5472:5557  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/Token01.sol\":5567:5627  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_67\n        /* \"contracts/Token01.sol\":5576:5581  owner */\n      dup3\n        /* \"contracts/Token01.sol\":5583:5590  spender */\n      dup7\n        /* \"contracts/Token01.sol\":5611:5626  subtractedValue */\n      dup7\n        /* \"contracts/Token01.sol\":5592:5608  currentAllowance */\n      dup5\n        /* \"contracts/Token01.sol\":5592:5626  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/Token01.sol\":5567:5575  _approve */\n      tag_62\n        /* \"contracts/Token01.sol\":5567:5627  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/Token01.sol\":2408:2595  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_52:\n        /* \"contracts/Token01.sol\":2487:2491  bool */\n      0x00\n        /* \"contracts/Token01.sol\":2519:2529  msg.sender */\n      caller\n        /* \"contracts/Token01.sol\":2539:2567  _transfer(owner, to, amount) */\n      tag_61\n        /* \"contracts/Token01.sol\":2519:2529  msg.sender */\n      dup2\n        /* \"contracts/Token01.sol\":2556:2558  to */\n      dup6\n        /* \"contracts/Token01.sol\":2560:2566  amount */\n      dup6\n        /* \"contracts/Token01.sol\":2539:2548  _transfer */\n      tag_68\n        /* \"contracts/Token01.sol\":2539:2567  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/Token01.sol\":2653:2802  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":2768:2786  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/Token01.sol\":2742:2749  uint256 */\n      0x00\n        /* \"contracts/Token01.sol\":2768:2786  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Token01.sol\":2768:2779  _allowances */\n      0x01\n        /* \"contracts/Token01.sol\":2768:2786  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Token01.sol\":2768:2795  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Token01.sol\":2653:2802  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/Token01.sol\":9194:9564  function _approve(... */\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":9325:9344  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/Token01.sol\":9317:9385  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":9403:9424  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/Token01.sol\":9395:9463  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":9474:9492  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Token01.sol\":9474:9485  _allowances */\n      0x01\n        /* \"contracts/Token01.sol\":9474:9492  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Token01.sol\":9474:9501  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Token01.sol\":9474:9510  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Token01.sol\":9525:9557  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/Token01.sol\":9194:9564  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token01.sol\":9845:10330  function _spendAllowance(... */\n    tag_66:\n        /* \"contracts/Token01.sol\":9975:9999  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Token01.sol\":10002:10027  allowance(owner, spender) */\n      tag_93\n        /* \"contracts/Token01.sol\":10012:10017  owner */\n      dup5\n        /* \"contracts/Token01.sol\":10019:10026  spender */\n      dup5\n        /* \"contracts/Token01.sol\":10002:10011  allowance */\n      tag_55\n        /* \"contracts/Token01.sol\":10002:10027  allowance(owner, spender) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/Token01.sol\":9975:10027  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/Token01.sol\":10060:10076  currentAllowance */\n      dup1\n      not(0x00)\n        /* \"contracts/Token01.sol\":10060:10158  currentAllowance != 115792089237316195423570985008687907853269984665640564039457584007913129639935 */\n      eq\n        /* \"contracts/Token01.sol\":10056:10324  if (currentAllowance != 115792089237316195423570985008687907853269984665640564039457584007913129639935) {... */\n      tag_96\n      jumpi\n        /* \"contracts/Token01.sol\":10202:10208  amount */\n      dup2\n        /* \"contracts/Token01.sol\":10182:10198  currentAllowance */\n      dup2\n        /* \"contracts/Token01.sol\":10182:10208  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/Token01.sol\":10174:10242  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_95\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/Token01.sol\":10261:10312  _approve(owner, spender, currentAllowance - amount) */\n      tag_96\n        /* \"contracts/Token01.sol\":10270:10275  owner */\n      dup5\n        /* \"contracts/Token01.sol\":10277:10284  spender */\n      dup5\n        /* \"contracts/Token01.sol\":10305:10311  amount */\n      dup5\n        /* \"contracts/Token01.sol\":10286:10302  currentAllowance */\n      dup5\n        /* \"contracts/Token01.sol\":10286:10311  currentAllowance - amount */\n      sub\n        /* \"contracts/Token01.sol\":10261:10269  _approve */\n      tag_62\n        /* \"contracts/Token01.sol\":10261:10312  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/Token01.sol\":9845:10330  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token01.sol\":6110:6900  function _transfer(... */\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":6236:6254  from != address(0) */\n      dup4\n      and\n        /* \"contracts/Token01.sol\":6228:6296  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":6314:6330  to != address(0) */\n      dup3\n      and\n        /* \"contracts/Token01.sol\":6306:6370  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/Token01.sol\":6381:6419  _beforeTokenTransfer(from, to, amount) */\n      tag_100\n        /* \"contracts/Token01.sol\":6402:6406  from */\n      dup4\n        /* \"contracts/Token01.sol\":6408:6410  to */\n      dup4\n        /* \"contracts/Token01.sol\":6412:6418  amount */\n      dup4\n        /* \"contracts/Token01.sol\":6381:6401  _beforeTokenTransfer */\n      tag_101\n        /* \"contracts/Token01.sol\":6381:6419  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":6452:6467  _balances[from] */\n      dup4\n      and\n        /* \"contracts/Token01.sol\":6430:6449  uint256 fromBalance */\n      0x00\n        /* \"contracts/Token01.sol\":6452:6467  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Token01.sol\":6485:6506  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/Token01.sol\":6477:6549  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":6564:6579  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"contracts/Token01.sol\":6564:6573  _balances */\n      0x00\n        /* \"contracts/Token01.sol\":6564:6579  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Token01.sol\":6582:6602  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"contracts/Token01.sol\":6564:6602  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/Token01.sol\":6779:6792  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"contracts/Token01.sol\":6779:6802  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"contracts/Token01.sol\":6819:6845  Transfer(from, to, amount) */\n      dup4\n      mload\n      dup7\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/Token01.sol\":6779:6792  _balances[to] */\n      swap2\n      swap4\n        /* \"contracts/Token01.sol\":6819:6845  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap1\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/Token01.sol\":6856:6893  _afterTokenTransfer(from, to, amount) */\n      tag_96\n        /* \"contracts/Token01.sol\":6876:6880  from */\n      dup5\n        /* \"contracts/Token01.sol\":6882:6884  to */\n      dup5\n        /* \"contracts/Token01.sol\":6886:6892  amount */\n      dup5\n        /* \"contracts/Token01.sol\":6856:6875  _afterTokenTransfer */\n      tag_101\n        /* \"contracts/Token01.sol\":6856:6893  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n        /* \"contracts/Token01.sol\":7176:7683  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":7259:7280  account != address(0) */\n      dup3\n      and\n        /* \"contracts/Token01.sol\":7251:7316  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_106\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/Token01.sol\":7327:7376  _beforeTokenTransfer(address(0), account, amount) */\n      tag_107\n        /* \"contracts/Token01.sol\":7356:7357  0 */\n      0x00\n        /* \"contracts/Token01.sol\":7360:7367  account */\n      dup4\n        /* \"contracts/Token01.sol\":7369:7375  amount */\n      dup4\n        /* \"contracts/Token01.sol\":7327:7347  _beforeTokenTransfer */\n      tag_101\n        /* \"contracts/Token01.sol\":7327:7376  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/Token01.sol\":7387:7399  _totalSupply */\n      0x02\n        /* \"contracts/Token01.sol\":7387:7409  _totalSupply += amount */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Token01.sol\":7536:7554  _balances[account] */\n      dup3\n      and\n        /* \"contracts/Token01.sol\":7387:7399  _totalSupply */\n      0x00\n        /* \"contracts/Token01.sol\":7536:7554  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Token01.sol\":7536:7564  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"contracts/Token01.sol\":7580:7617  Transfer(address(0), account, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/Token01.sol\":7628:7676  _afterTokenTransfer(address(0), account, amount) */\n      tag_75\n        /* \"contracts/Token01.sol\":7656:7657  0 */\n      0x00\n        /* \"contracts/Token01.sol\":7660:7667  account */\n      dup4\n        /* \"contracts/Token01.sol\":7669:7675  amount */\n      dup4\n        /* \"contracts/Token01.sol\":10914:11035  function _beforeTokenTransfer(... */\n    tag_101:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122091938d96eeb7500d2e2d573f0bd8a6545db45e4afdf67a999956ab0df8fee5e764736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060408051808201909152600780825266746f6b656e303160c81b602090920191825261003f91600391610086565b5060408051808201909152600780825266746f6b656e303160c81b602090920191825261006e91600491610086565b50600580546001600160a01b03191633179055610121565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100c757805160ff19168380011785556100f4565b828001600101855582156100f4579182015b828111156100f45782518255916020019190600101906100d9565b50610100929150610104565b5090565b61011e91905b80821115610100576000815560010161010a565b90565b6109c0806101306000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461021057806370a082311461023e57806395d89b4114610264578063a457c2d71461026c578063a9059cbb14610298578063dd62ed3e146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102f2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610388565b604080519115158252519081900360200190f35b61017e6103a0565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b038135811691602081013590911690604001356103a6565b6101ce6103ca565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b0381351690602001356103cf565b61023c6004803603604081101561022657600080fd5b506001600160a01b0381351690602001356103e8565b005b61017e6004803603602081101561025457600080fd5b50356001600160a01b031661040d565b6100c1610428565b6101626004803603604081101561028257600080fd5b506001600160a01b038135169060200135610489565b610162600480360360408110156102ae57600080fd5b506001600160a01b0381351690602001356104e5565b61017e600480360360408110156102da57600080fd5b506001600160a01b03813581169160200135166104f3565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b60003361039681858561051e565b5060019392505050565b60025490565b6000336103b485828561060a565b6103bf858585610689565b506001949350505050565b601290565b6000336103968185856103e283836104f3565b0161051e565b6005546001600160a01b031633146103ff57600080fd5b61040982826107e4565b5050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b6000338161049782866104f3565b9050838110156104d85760405162461bcd60e51b81526004018080602001828103825260258152602001806109666025913960400191505060405180910390fd5b6103bf828686840361051e565b600033610396818585610689565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105635760405162461bcd60e51b81526004018080602001828103825260248152602001806109426024913960400191505060405180910390fd5b6001600160a01b0382166105a85760405162461bcd60e51b81526004018080602001828103825260228152602001806108d56022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061061684846104f3565b905080600019146106835781811015610676576040805162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015290519081900360640190fd5b610683848484840361051e565b50505050565b6001600160a01b0383166106ce5760405162461bcd60e51b815260040180806020018281038252602581526020018061091d6025913960400191505060405180910390fd5b6001600160a01b0382166107135760405162461bcd60e51b81526004018080602001828103825260238152602001806108b26023913960400191505060405180910390fd5b61071e8383836108ac565b6001600160a01b038316600090815260208190526040902054818110156107765760405162461bcd60e51b81526004018080602001828103825260268152602001806108f76026913960400191505060405180910390fd5b6001600160a01b038085166000818152602081815260408083208787039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36106838484846108ac565b6001600160a01b03821661083f576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61084b600083836108ac565b60028054820190556001600160a01b038216600081815260208181526040808320805486019055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3610409600083835b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122091938d96eeb7500d2e2d573f0bd8a6545db45e4afdf67a999956ab0df8fee5e764736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP1 DUP3 MSTORE PUSH7 0x746F6B656E3031 PUSH1 0xC8 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0x3F SWAP2 PUSH1 0x3 SWAP2 PUSH2 0x86 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP1 DUP3 MSTORE PUSH7 0x746F6B656E3031 PUSH1 0xC8 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0x6E SWAP2 PUSH1 0x4 SWAP2 PUSH2 0x86 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x121 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xC7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xF4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xF4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xF4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD9 JUMP JUMPDEST POP PUSH2 0x100 SWAP3 SWAP2 POP PUSH2 0x104 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x11E SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x10A JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x9C0 DUP1 PUSH2 0x130 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C4 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x128 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40D JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x489 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x37E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x361 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x396 DUP2 DUP6 DUP6 PUSH2 0x51E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3B4 DUP6 DUP3 DUP6 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x3BF DUP6 DUP6 DUP6 PUSH2 0x689 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x396 DUP2 DUP6 DUP6 PUSH2 0x3E2 DUP4 DUP4 PUSH2 0x4F3 JUMP JUMPDEST ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x409 DUP3 DUP3 PUSH2 0x7E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x37E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x497 DUP3 DUP7 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x966 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x51E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x396 DUP2 DUP6 DUP6 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x942 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8D5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x616 DUP5 DUP5 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 NOT EQ PUSH2 0x683 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x676 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x683 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x51E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x91D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B2 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71E DUP4 DUP4 DUP4 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8F7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x683 DUP5 DUP5 DUP5 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x84B PUSH1 0x0 DUP4 DUP4 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x409 PUSH1 0x0 DUP4 DUP4 JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212209193 DUP14 SWAP7 0xEE 0xB7 POP 0xD 0x2E 0x2D JUMPI EXTCODEHASH SIGNEXTEND 0xD8 0xA6 SLOAD 0x5D 0xB4 0x5E 0x4A REVERT 0xF6 PUSH27 0x999956AB0DF8FEE5E764736F6C6343000606003300000000000000 ",
							"sourceMap": "77:11668:1:-:0;;;657:113;5:9:-1;2:2;;;27:1;24;17:12;2:2;-1:-1;688:17:1;;;;;;;;;;;;;-1:-1:-1;;;688:17:1;;;;;;;;;:5;;:17;:::i;:::-;-1:-1:-1;715:19:1;;;;;;;;;;;;;-1:-1:-1;;;715:19:1;;;;;;;;;:7;;:19;:::i;:::-;-1:-1:-1;744:6:1;:19;;-1:-1:-1;;;;;;744:19:1;753:10;744:19;;;77:11668;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;77:11668:1;;;-1:-1:-1;77:11668:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461021057806370a082311461023e57806395d89b4114610264578063a457c2d71461026c578063a9059cbb14610298578063dd62ed3e146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102f2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610388565b604080519115158252519081900360200190f35b61017e6103a0565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b038135811691602081013590911690604001356103a6565b6101ce6103ca565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b0381351690602001356103cf565b61023c6004803603604081101561022657600080fd5b506001600160a01b0381351690602001356103e8565b005b61017e6004803603602081101561025457600080fd5b50356001600160a01b031661040d565b6100c1610428565b6101626004803603604081101561028257600080fd5b506001600160a01b038135169060200135610489565b610162600480360360408110156102ae57600080fd5b506001600160a01b0381351690602001356104e5565b61017e600480360360408110156102da57600080fd5b506001600160a01b03813581169160200135166104f3565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b60003361039681858561051e565b5060019392505050565b60025490565b6000336103b485828561060a565b6103bf858585610689565b506001949350505050565b601290565b6000336103968185856103e283836104f3565b0161051e565b6005546001600160a01b031633146103ff57600080fd5b61040982826107e4565b5050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b6000338161049782866104f3565b9050838110156104d85760405162461bcd60e51b81526004018080602001828103825260258152602001806109666025913960400191505060405180910390fd5b6103bf828686840361051e565b600033610396818585610689565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105635760405162461bcd60e51b81526004018080602001828103825260248152602001806109426024913960400191505060405180910390fd5b6001600160a01b0382166105a85760405162461bcd60e51b81526004018080602001828103825260228152602001806108d56022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600061061684846104f3565b905080600019146106835781811015610676576040805162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015290519081900360640190fd5b610683848484840361051e565b50505050565b6001600160a01b0383166106ce5760405162461bcd60e51b815260040180806020018281038252602581526020018061091d6025913960400191505060405180910390fd5b6001600160a01b0382166107135760405162461bcd60e51b81526004018080602001828103825260238152602001806108b26023913960400191505060405180910390fd5b61071e8383836108ac565b6001600160a01b038316600090815260208190526040902054818110156107765760405162461bcd60e51b81526004018080602001828103825260268152602001806108f76026913960400191505060405180910390fd5b6001600160a01b038085166000818152602081815260408083208787039055938716808352918490208054870190558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36106838484846108ac565b6001600160a01b03821661083f576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61084b600083836108ac565b60028054820190556001600160a01b038216600081815260208181526040808320805486019055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a3610409600083835b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122091938d96eeb7500d2e2d573f0bd8a6545db45e4afdf67a999956ab0df8fee5e764736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C4 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x128 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x40D JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x428 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x489 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x4F3 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x37E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x361 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x396 DUP2 DUP6 DUP6 PUSH2 0x51E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3B4 DUP6 DUP3 DUP6 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x3BF DUP6 DUP6 DUP6 PUSH2 0x689 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x396 DUP2 DUP6 DUP6 PUSH2 0x3E2 DUP4 DUP4 PUSH2 0x4F3 JUMP JUMPDEST ADD PUSH2 0x51E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x409 DUP3 DUP3 PUSH2 0x7E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x37E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x497 DUP3 DUP7 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x966 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3BF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x51E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x396 DUP2 DUP6 DUP6 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x942 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8D5 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x616 DUP5 DUP5 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 NOT EQ PUSH2 0x683 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x676 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x683 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x51E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x91D PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8B2 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x71E DUP4 DUP4 DUP4 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8F7 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x683 DUP5 DUP5 DUP5 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x83F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x84B PUSH1 0x0 DUP4 DUP4 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x409 PUSH1 0x0 DUP4 DUP4 JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212209193 DUP14 SWAP7 0xEE 0xB7 POP 0xD 0x2E 0x2D JUMPI EXTCODEHASH SIGNEXTEND 0xD8 0xA6 SLOAD 0x5D 0xB4 0x5E 0x4A REVERT 0xF6 PUSH27 0x999956AB0DF8FEE5E764736F6C6343000606003300000000000000 ",
							"sourceMap": "77:11668:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;77:11668:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;835:98:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;835:98:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3110:195;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3110:195:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1923:106;;;:::i;:::-;;;;;;;;;;;;;;;;3867:284;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3867:284:1;;;;;;;;;;;;;;;;;:::i;1772:91::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4546:232;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4546:232:1;;;;;;;;:::i;7689:131::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;7689:131:1;;;;;;;;:::i;:::-;;2087:125;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2087:125:1;-1:-1:-1;;;;;2087:125:1;;:::i;1046:102::-;;;:::i;5265:391::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5265:391:1;;;;;;;;:::i;2408:187::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;2408:187:1;;;;;;;;:::i;2653:149::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;2653:149:1;;;;;;;;;;:::i;835:98::-;921:5;914:12;;;;;;;;-1:-1:-1;;914:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;889:13;;914:12;;921:5;;914:12;;921:5;914:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:98;:::o;3110:195::-;3193:4;3225:10;3245:32;3225:10;3261:7;3270:6;3245:8;:32::i;:::-;-1:-1:-1;3294:4:1;;3110:195;-1:-1:-1;;;3110:195:1:o;1923:106::-;2010:12;;1923:106;:::o;3867:284::-;3994:4;4028:10;4048:38;4064:4;4028:10;4079:6;4048:15;:38::i;:::-;4096:27;4106:4;4112:2;4116:6;4096:9;:27::i;:::-;-1:-1:-1;4140:4:1;;3867:284;-1:-1:-1;;;;3867:284:1:o;1772:91::-;1854:2;1772:91;:::o;4546:232::-;4634:4;4666:10;4686:64;4666:10;4702:7;4739:10;4711:25;4666:10;4702:7;4711:9;:25::i;:::-;:38;4686:8;:64::i;7689:131::-;7760:6;;-1:-1:-1;;;;;7760:6:1;7770:10;7760:20;7752:29;;12:1:-1;9;2:12;7752:29:1;7791:22;7797:7;7806:6;7791:5;:22::i;:::-;7689:131;;:::o;2087:125::-;-1:-1:-1;;;;;2187:18:1;2161:7;2187:18;;;;;;;;;;;;2087:125::o;1046:102::-;1134:7;1127:14;;;;;;;;-1:-1:-1;;1127:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:13;;1127:14;;1134:7;;1127:14;;1134:7;1127:14;;;;;;;;;;;;;;;;;;;;;;;;5265:391;5358:4;5390:10;5358:4;5437:25;5390:10;5454:7;5437:9;:25::i;:::-;5410:52;;5500:15;5480:16;:35;;5472:85;;;;-1:-1:-1;;;5472:85:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5567:60;5576:5;5583:7;5611:15;5592:16;:34;5567:8;:60::i;2408:187::-;2487:4;2519:10;2539:28;2519:10;2556:2;2560:6;2539:9;:28::i;2653:149::-;-1:-1:-1;;;;;2768:18:1;;;2742:7;2768:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2653:149::o;9194:370::-;-1:-1:-1;;;;;9325:19:1;;9317:68;;;;-1:-1:-1;;;9317:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9403:21:1;;9395:68;;;;-1:-1:-1;;;9395:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9474:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9525:32;;;;;;;;;;;;;;;;;9194:370;;;:::o;9845:485::-;9975:24;10002:25;10012:5;10019:7;10002:9;:25::i;:::-;9975:52;;10060:16;-1:-1:-1;;10060:98:1;10056:268;;10202:6;10182:16;:26;;10174:68;;;;;-1:-1:-1;;;10174:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;10261:51;10270:5;10277:7;10305:6;10286:16;:25;10261:8;:51::i;:::-;9845:485;;;;:::o;6110:790::-;-1:-1:-1;;;;;6236:18:1;;6228:68;;;;-1:-1:-1;;;6228:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6314:16:1;;6306:64;;;;-1:-1:-1;;;6306:64:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6381:38;6402:4;6408:2;6412:6;6381:20;:38::i;:::-;-1:-1:-1;;;;;6452:15:1;;6430:19;6452:15;;;;;;;;;;;6485:21;;;;6477:72;;;;-1:-1:-1;;;6477:72:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6564:15:1;;;:9;:15;;;;;;;;;;;6582:20;;;6564:38;;6779:13;;;;;;;;;;:23;;;;;;6819:26;;;;;;;6779:13;;6819:26;;;;;;;;;;;6856:37;6876:4;6882:2;6886:6;6856:19;:37::i;7176:507::-;-1:-1:-1;;;;;7259:21:1;;7251:65;;;;;-1:-1:-1;;;7251:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;7327:49;7356:1;7360:7;7369:6;7327:20;:49::i;:::-;7387:12;:22;;;;;;-1:-1:-1;;;;;7536:18:1;;7387:12;7536:18;;;;;;;;;;;:28;;;;;;7580:37;;;;;;;;;;;;;;;;;;7628:48;7656:1;7660:7;7669:6;10914:121;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "499200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "296",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 657,
									"end": 770,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 688,
									"end": 705,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 688,
									"end": 705,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "746F6B656E3031"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 688,
									"end": 705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 688,
									"end": 705,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 688,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 688,
									"end": 693,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 688,
									"end": 705,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 688,
									"end": 705,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 688,
									"end": 705,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 688,
									"end": 705,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 715,
									"end": 734,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 715,
									"end": 734,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "746F6B656E3031"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 715,
									"end": 734,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 715,
									"end": 734,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 715,
									"end": 722,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 715,
									"end": 722,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 715,
									"end": 734,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 715,
									"end": 734,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 715,
									"end": 734,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 715,
									"end": 734,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 744,
									"end": 750,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 744,
									"end": 763,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 744,
									"end": 763,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 744,
									"end": 763,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 753,
									"end": 763,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 744,
									"end": 763,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 744,
									"end": 763,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 744,
									"end": 763,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 11745,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091938d96eeb7500d2e2d573f0bd8a6545db45e4afdf67a999956ab0df8fee5e764736f6c63430006060033",
									".code": [
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "40C10F19"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "40C10F19"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 77,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "36"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1046,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1046,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1046,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1046,
											"end": 1148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "48"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "51"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "54"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 835,
											"end": 933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 921,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 889,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 889,
											"end": 902,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 921,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 921,
											"end": 926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 921,
											"end": 926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 914,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 914,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 933,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3193,
											"end": 3197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3235,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3225,
											"end": 3235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3268,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3276,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3294,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3294,
											"end": 3298,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3110,
											"end": 3305,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2010,
											"end": 2022,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 2029,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4038,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4064,
											"end": 4068,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4048,
											"end": 4086,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4048,
											"end": 4086,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4048,
											"end": 4086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4106,
											"end": 4110,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4114,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 4096,
											"end": 4123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4123,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 4096,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4144,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4140,
											"end": 4144,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3867,
											"end": 4151,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1863,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4546,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4749,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4711,
											"end": 4736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4711,
											"end": 4736,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4711,
											"end": 4736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4686,
											"end": 4750,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7766,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 7760,
											"end": 7766,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7760,
											"end": 7766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7770,
											"end": 7780,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7760,
											"end": 7780,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7752,
											"end": 7781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7797,
											"end": 7804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7806,
											"end": 7812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7791,
											"end": 7813,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7791,
											"end": 7813,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7791,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7689,
											"end": 7820,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2212,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1046,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1046,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1127,
											"end": 1141,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5265,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5390,
											"end": 5400,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5390,
											"end": 5400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5437,
											"end": 5462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5437,
											"end": 5462,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5437,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5500,
											"end": 5515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5515,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5472,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 5576,
											"end": 5581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5608,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5567,
											"end": 5627,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2408,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2529,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2519,
											"end": 2529,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2558,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2539,
											"end": 2567,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2779,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2802,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9194,
											"end": 9564,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 9194,
											"end": 9564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9325,
											"end": 9344,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9325,
											"end": 9344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 9317,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9403,
											"end": 9424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9424,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 9395,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9485,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9501,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9510,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9474,
											"end": 9510,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9194,
											"end": 9564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9845,
											"end": 10330,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 9845,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10012,
											"end": 10017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10026,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10002,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10002,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10027,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10060,
											"end": 10076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10060,
											"end": 10158,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10056,
											"end": 10324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10182,
											"end": 10198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10182,
											"end": 10208,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10182,
											"end": 10208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10174,
											"end": 10242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10261,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10270,
											"end": 10275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10284,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 10311,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10302,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10261,
											"end": 10269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 10261,
											"end": 10312,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10261,
											"end": 10312,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 10261,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 10330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 10330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 10330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 10330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9845,
											"end": 10330,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6110,
											"end": 6900,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6110,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6228,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6314,
											"end": 6330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6330,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6306,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6402,
											"end": 6406,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6418,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6381,
											"end": 6419,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6381,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6381,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6452,
											"end": 6467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6485,
											"end": 6506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6485,
											"end": 6506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6485,
											"end": 6506,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6485,
											"end": 6506,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6477,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6582,
											"end": 6602,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6582,
											"end": 6602,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6582,
											"end": 6602,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6602,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6802,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6802,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6802,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6792,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6819,
											"end": 6845,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6856,
											"end": 6893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 6876,
											"end": 6880,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6882,
											"end": 6884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6892,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6856,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6856,
											"end": 6893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7176,
											"end": 7683,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7176,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7259,
											"end": 7280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7259,
											"end": 7280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 7251,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7356,
											"end": 7357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7360,
											"end": 7367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7327,
											"end": 7376,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7327,
											"end": 7376,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7327,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7387,
											"end": 7409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7409,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7409,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7564,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7564,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7564,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7580,
											"end": 7617,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7628,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7656,
											"end": 7657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7660,
											"end": 7667,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11035,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10914,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11035,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}.     * The default value of {decimals} is 18. To select a different value for {decimals} you should overload it.     * All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden;     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * NOTE: Does not update the allowance if the current allowance is the maximum `uint256`.     * Requirements:     * - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Token01.sol\":\"Token01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0x8fcc19d09f8cd633b2d4af928f4855f129d1d6a58e12c7481d920b863df4afba\",\"urls\":[\"bzz-raw://1687c7b71217e6ac6b00e441c8207327034f489547bd0bd592237425e9776833\",\"dweb:/ipfs/QmSJpbE3LVoMjeJCbRbuLYNRBg9yDDyG2kgvmkE3hhfVWU\"]},\"contracts/Token01.sol\":{\"keccak256\":\"0xa7151a27401122e595639ac4d5c84f777e48a231dbfeffefcc8b37ae2180d899\",\"urls\":[\"bzz-raw://c5e81b40ee21cc624d3d783c7304d0c7461097bed551d01e9dcf949099113cf7\",\"dweb:/ipfs/QmS9ebZ59CrmKQZKvKWGpbx3gRRCVxpK1tDyg1NGVheAVX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 92,
								"contract": "contracts/Token01.sol:Token01",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 98,
								"contract": "contracts/Token01.sol:Token01",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 100,
								"contract": "contracts/Token01.sol:Token01",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 102,
								"contract": "contracts/Token01.sol:Token01",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 104,
								"contract": "contracts/Token01.sol:Token01",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 106,
								"contract": "contracts/Token01.sol:Token01",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							83
						]
					},
					"id": 84,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 83,
							"linearizedBaseContracts": [
								83
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 9,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 9,
												"src": "63:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 9,
												"src": "86:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "86:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 9,
												"src": "111:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "111:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "62:60:0"
									},
									"src": "48:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 17,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 17,
												"src": "143:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 17,
												"src": "165:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 17,
												"src": "185:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "185:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "142:54:0"
									},
									"src": "128:69:0"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "216:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 22,
												"src": "242:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 19,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "242:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "241:15:0"
									},
									"scope": 83,
									"src": "203:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 27,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 27,
												"src": "303:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "303:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "302:15:0"
									},
									"scope": 83,
									"src": "262:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "340:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 32,
												"src": "366:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 29,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "366:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "365:7:0"
									},
									"scope": 83,
									"src": "323:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 37,
												"src": "424:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "423:6:0"
									},
									"scope": 83,
									"src": "378:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "454:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "453:15:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "492:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "491:6:0"
									},
									"scope": 83,
									"src": "435:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "dd62ed3e",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "522:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "537:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "521:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "577:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "577:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "576:6:0"
									},
									"scope": 83,
									"src": "503:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "606:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "623:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "623:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "605:29:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "653:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "653:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "652:6:0"
									},
									"scope": 83,
									"src": "589:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 71,
												"src": "682:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 71,
												"src": "694:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "694:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "681:24:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 71,
												"src": "724:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "724:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "723:6:0"
									},
									"scope": 83,
									"src": "664:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "757:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "771:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "783:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "756:38:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 82,
												"src": "813:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "813:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "812:6:0"
									},
									"scope": 83,
									"src": "735:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 84,
							"src": "25:796:0"
						}
					],
					"src": "0:822:0"
				},
				"id": 0
			},
			"contracts/Token01.sol": {
				"ast": {
					"absolutePath": "contracts/Token01.sol",
					"exportedSymbols": {
						"Token01": [
							677
						]
					},
					"id": 678,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 85,
							"literals": [
								"solidity",
								"=",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 86,
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 84,
							"src": "25:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 87,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 83,
										"src": "97:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$83",
											"typeString": "contract IERC20"
										}
									},
									"id": 88,
									"nodeType": "InheritanceSpecifier",
									"src": "97:6:1"
								}
							],
							"contractDependencies": [
								83
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 677,
							"linearizedBaseContracts": [
								677,
								83
							],
							"name": "Token01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 92,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 677,
									"src": "110:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 91,
										"keyType": {
											"id": 89,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "118:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "110:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 90,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "129:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 98,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 677,
									"src": "162:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 97,
										"keyType": {
											"id": 93,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "170:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "162:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 96,
											"keyType": {
												"id": 94,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "189:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "181:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "200:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 677,
									"src": "236:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "236:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 677,
									"src": "271:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 101,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "271:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 104,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 677,
									"src": "297:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 103,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "297:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 106,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 677,
									"src": "325:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 105,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "678:92:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 110,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "688:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "746f6b656e3031",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "696:9:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_594255dbcd7903e1657b8ee8d90fd5a629241872543ae56454a1e11b85b7ef4a",
															"typeString": "literal_string \"token01\""
														},
														"value": "token01"
													},
													"src": "688:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "688:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 114,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "715:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "746f6b656e3031",
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "725:9:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_594255dbcd7903e1657b8ee8d90fd5a629241872543ae56454a1e11b85b7ef4a",
															"typeString": "literal_string \"token01\""
														},
														"value": "token01"
													},
													"src": "715:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "715:19:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 118,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "744:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 119,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "753:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "753:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "744:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "744:19:1"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "354:298:1",
										"text": "@dev Sets the values for {name} and {symbol}.\n     * The default value of {decimals} is 18. To select a different value for\n{decimals} you should overload it.\n     * All two of these values are immutable: they can only be set once during\nconstruction."
									},
									"id": 124,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:0:1"
									},
									"scope": 677,
									"src": "657:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										22
									],
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "904:29:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 131,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 102,
													"src": "921:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 130,
												"id": 132,
												"nodeType": "Return",
												"src": "914:12:1"
											}
										]
									},
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "776:54:1",
										"text": "@dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 127,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "871:8:1"
									},
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "848:2:1"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 134,
												"src": "889:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "889:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "888:15:1"
									},
									"scope": 677,
									"src": "835:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										27
									],
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "1117:31:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 141,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 104,
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 140,
												"id": 142,
												"nodeType": "Return",
												"src": "1127:14:1"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "939:102:1",
										"text": "@dev Returns the symbol of the token, usually a shorter version of the\nname."
									},
									"functionSelector": "95d89b41",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 137,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1084:8:1"
									},
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:2:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 144,
												"src": "1102:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 138,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1102:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1101:15:1"
									},
									"scope": 677,
									"src": "1046:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										32
									],
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1837:26:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1854:2:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 150,
												"id": 152,
												"nodeType": "Return",
												"src": "1847:9:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1154:613:1",
										"text": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5.05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei. This is the value {ERC20} uses, unless this function is\noverridden;\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 147,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1812:8:1"
									},
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:2:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 154,
												"src": "1830:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 148,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1830:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1829:7:1"
									},
									"scope": 677,
									"src": "1772:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										37
									],
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1993:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "2010:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "2003:19:1"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "1869:49:1",
										"text": "@dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1966:8:1"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1943:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "1984:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1983:9:1"
									},
									"scope": 677,
									"src": "1923:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "2170:42:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 173,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2187:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 175,
													"indexExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2197:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2187:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 172,
												"id": 176,
												"nodeType": "Return",
												"src": "2180:25:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "2035:47:1",
										"text": "@dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2143:8:1"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 178,
												"src": "2106:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2106:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2105:17:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 178,
												"src": "2161:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2160:9:1"
									},
									"scope": 677,
									"src": "2087:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										71
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2493:102:1",
										"statements": [
											{
												"assignments": [
													190
												],
												"declarations": [
													{
														"constant": false,
														"id": 190,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 202,
														"src": "2503:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 189,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2503:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 193,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 191,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "2519:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2519:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2503:26:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 195,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2549:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 196,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2556:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 197,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "2560:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 194,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "2539:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2539:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "2539:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2584:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 188,
												"id": 201,
												"nodeType": "Return",
												"src": "2577:11:1"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "2218:185:1",
										"text": "@dev See {IERC20-transfer}.\n     * Requirements:\n     * - `to` cannot be the zero address.\n- the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2469:8:1"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "2426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "2438:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2425:28:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 203,
												"src": "2487:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2486:6:1"
									},
									"scope": 677,
									"src": "2408:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										53
									],
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "2751:51:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 214,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2768:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 216,
														"indexExpression": {
															"argumentTypes": null,
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "2780:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2768:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 218,
													"indexExpression": {
														"argumentTypes": null,
														"id": 217,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "2787:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2768:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 213,
												"id": 219,
												"nodeType": "Return",
												"src": "2761:34:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2601:47:1",
										"text": "@dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 210,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2724:8:1"
									},
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "2672:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "2687:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2687:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2671:32:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "2742:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2741:9:1"
									},
									"scope": 677,
									"src": "2653:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										62
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "3199:106:1",
										"statements": [
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 245,
														"src": "3209:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 232,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3209:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 234,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "3225:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3225:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3209:26:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 238,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "3254:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 239,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "3261:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 240,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "3270:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "3245:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3245:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "3245:32:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3294:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 231,
												"id": 244,
												"nodeType": "Return",
												"src": "3287:11:1"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "2808:297:1",
										"text": "@dev See {IERC20-approve}.\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n`transferFrom`. This is semantically equivalent to an infinite approval.\n     * Requirements:\n     * - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 228,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3175:8:1"
									},
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "3127:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3127:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "3144:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3144:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3126:33:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "3193:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3193:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3192:6:1"
									},
									"scope": 677,
									"src": "3110:195:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										82
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "4000:151:1",
										"statements": [
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "spender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 278,
														"src": "4010:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 259,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4010:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 263,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 261,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "4028:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4028:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4010:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 265,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "4064:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 266,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 267,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "4079:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 264,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "4048:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "4048:38:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 271,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "4106:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 272,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "4112:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "4116:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "4096:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4096:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4096:27:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4140:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 258,
												"id": 277,
												"nodeType": "Return",
												"src": "4133:11:1"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3311:551:1",
										"text": "@dev See {IERC20-transferFrom}.\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20}.\n     * NOTE: Does not update the allowance if the current allowance\nis the maximum `uint256`.\n     * Requirements:\n     * - `from` and `to` cannot be the zero address.\n- `from` must have a balance of at least `amount`.\n- the caller must have allowance for ``from``'s tokens of at least\n`amount`."
									},
									"functionSelector": "23b872dd",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 255,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3976:8:1"
									},
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 279,
												"src": "3898:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 279,
												"src": "3920:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3920:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 279,
												"src": "3940:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3940:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3888:72:1"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 279,
												"src": "3994:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3994:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3993:6:1"
									},
									"scope": 677,
									"src": "3867:284:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "4640:138:1",
										"statements": [
											{
												"assignments": [
													290
												],
												"declarations": [
													{
														"constant": false,
														"id": 290,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 307,
														"src": "4650:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 289,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4650:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 293,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "4666:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4666:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4650:26:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 295,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4695:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 296,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "4702:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 298,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "4721:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 299,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "4728:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 297,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "4711:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4711:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 301,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "4739:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4711:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 294,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "4686:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "4686:64:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4767:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 288,
												"id": 306,
												"nodeType": "Return",
												"src": "4760:11:1"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4157:384:1",
										"text": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "4573:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "4590:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4590:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4572:37:1"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "4634:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4634:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4633:6:1"
									},
									"scope": 677,
									"src": "4546:232:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "5364:292:1",
										"statements": [
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "owner",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 347,
														"src": "5374:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 318,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5374:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 322,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 320,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "5390:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "5390:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5374:26:1"
											},
											{
												"assignments": [
													324
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 347,
														"src": "5410:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5410:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 329,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 326,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5447:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 327,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5454:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 325,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "5437:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5437:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5410:52:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 331,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "5480:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 332,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "5500:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5480:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5517:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5472:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5472:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "5472:85:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 338,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "5576:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 339,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5583:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 340,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "5592:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 341,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "5611:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5592:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 337,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "5567:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5567:60:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "5567:60:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5645:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 317,
												"id": 346,
												"nodeType": "Return",
												"src": "5638:11:1"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "4784:476:1",
										"text": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n     * Emits an {Approval} event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "5292:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5292:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "5309:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5309:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5291:42:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 348,
												"src": "5358:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 315,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5358:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5357:6:1"
									},
									"scope": 677,
									"src": "5265:391:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "6218:682:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 359,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "6236:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6252:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6244:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 360,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6244:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6244:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6236:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6256:39:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6228:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6228:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "6228:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 369,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "6314:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6328:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6320:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 370,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6320:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6320:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6314:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6332:37:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6306:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6306:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "6306:64:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 379,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6402:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 380,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "6408:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6412:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "6381:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "6381:38:1"
											},
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "fromBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 423,
														"src": "6430:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6430:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 386,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "6452:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 388,
													"indexExpression": {
														"argumentTypes": null,
														"id": 387,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "6462:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6452:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6430:37:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 391,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "6485:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 392,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6500:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6485:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6508:40:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6477:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6477:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "6477:72:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "6564:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 399,
														"indexExpression": {
															"argumentTypes": null,
															"id": 398,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6574:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6564:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 400,
															"name": "fromBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "6582:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 401,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6596:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6582:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6564:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "6564:38:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 405,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "6779:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 407,
														"indexExpression": {
															"argumentTypes": null,
															"id": 406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "6789:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6779:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 408,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "6796:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6779:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "6779:23:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 412,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6828:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 413,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "6834:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6838:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "6819:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6819:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "EmitStatement",
												"src": "6814:31:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 418,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "6876:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "6882:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 420,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "6886:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "6856:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6856:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "6856:37:1"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "5662:443:1",
										"text": "@dev Moves `amount` of tokens from `from` to `to`.\n     * This internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a {Transfer} event.\n     * Requirements:\n     * - `from` cannot be the zero address.\n- `to` cannot be the zero address.\n- `from` must have a balance of at least `amount`."
									},
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "6138:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "6160:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6160:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 424,
												"src": "6180:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6128:72:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6218:0:1"
									},
									"scope": 677,
									"src": "6110:790:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "7241:442:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 433,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "7259:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7278:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7270:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 434,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7270:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7270:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7259:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7282:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7251:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7251:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "7251:65:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7356:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7348:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 443,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7348:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7348:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 447,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 448,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7369:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 442,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "7327:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7327:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "7327:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "7387:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "7403:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7387:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "7387:22:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 455,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "7536:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"argumentTypes": null,
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7546:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7536:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 458,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "7558:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7536:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "7536:28:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7597:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7589:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 462,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7589:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7589:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 466,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7601:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7610:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 461,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "7580:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7580:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "EmitStatement",
												"src": "7575:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7656:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7648:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7648:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7648:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 475,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "7660:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 476,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7669:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 470,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "7628:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7628:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "7628:48:1"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "6906:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a {Transfer} event with `from` set to the zero address.\n     * Requirements:\n     * - `account` cannot be the zero address."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "7191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7191:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "7208:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7208:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7190:33:1"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7241:0:1"
									},
									"scope": 677,
									"src": "7176:507:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "7742:78:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 488,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "7760:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 489,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "7770:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7770:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7760:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 487,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7752:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7752:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "7752:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 495,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "7797:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "7806:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "7791:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7791:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "7791:22:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "40c10f19",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 500,
												"src": "7703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 500,
												"src": "7720:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7702:33:1"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7742:0:1"
									},
									"scope": 677,
									"src": "7689:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "8205:566:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 509,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "8223:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8242:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8234:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 510,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8234:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8234:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8223:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8246:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8215:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8215:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "8215:67:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 519,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "8314:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8331:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8323:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 520,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8323:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8323:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 524,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "8335:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "8293:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8293:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "8293:49:1"
											},
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "accountBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 570,
														"src": "8353:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8353:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 529,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "8378:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 531,
													"indexExpression": {
														"argumentTypes": null,
														"id": 530,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "8388:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8378:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8353:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 534,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "8414:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 535,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "8432:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8414:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8440:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8406:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8406:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "8406:71:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 540,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "8492:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 542,
														"indexExpression": {
															"argumentTypes": null,
															"id": 541,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "8502:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8492:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 543,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "8513:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 544,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "8530:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8513:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8492:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "8492:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 548,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "8629:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 549,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "8645:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8629:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "8629:22:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 553,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "8677:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8694:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8686:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 554,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8686:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8686:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 558,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "8698:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "8668:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8668:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "EmitStatement",
												"src": "8663:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 562,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "8736:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8753:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8745:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8745:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8745:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "8757:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 561,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "8716:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8716:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "8716:48:1"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "7826:309:1",
										"text": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a {Transfer} event with `to` set to the zero address.\n     * Requirements:\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 571,
												"src": "8155:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8155:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 571,
												"src": "8172:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8154:33:1"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8205:0:1"
									},
									"scope": 677,
									"src": "8140:631:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "9307:257:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 582,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "9325:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9342:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9334:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 583,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9334:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9334:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9346:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9317:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "9317:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 592,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "9403:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9422:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9414:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 593,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9414:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9414:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9403:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9426:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9395:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9395:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "9395:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 601,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "9474:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 604,
															"indexExpression": {
																"argumentTypes": null,
																"id": 602,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "9486:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9474:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 605,
														"indexExpression": {
															"argumentTypes": null,
															"id": 603,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "9493:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9474:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 606,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "9504:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9474:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "9474:36:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 610,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "9534:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "9541:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 612,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "9550:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 609,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "9525:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9525:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "EmitStatement",
												"src": "9520:37:1"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "8777:412:1",
										"text": "@dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     * This internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an {Approval} event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "9221:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "9244:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9244:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "9269:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9269:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9211:78:1"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9307:0:1"
									},
									"scope": 677,
									"src": "9194:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "9965:365:1",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 653,
														"src": "9975:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9975:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 629,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "10012:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 630,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "10019:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 628,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "10002:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10002:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9975:52:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 633,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "10060:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "313135373932303839323337333136313935343233353730393835303038363837393037383533323639393834363635363430353634303339343537353834303037393133313239363339393335",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10080:78:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...9935"
														},
														"value": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
													},
													"src": "10060:98:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 652,
												"nodeType": "IfStatement",
												"src": "10056:268:1",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "10160:164:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 637,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 627,
																			"src": "10182:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 638,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "10202:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10182:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10210:31:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 636,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "10174:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10174:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "10174:68:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 644,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "10270:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 645,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "10277:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 646,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 627,
																			"src": "10286:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 647,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "10305:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "10286:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 643,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "10261:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10261:51:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 650,
															"nodeType": "ExpressionStatement",
															"src": "10261:51:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "9570:270:1",
										"text": "@dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     * Does not update the allowance amount in case of infinite allowance.\nRevert if not enough allowance is available.\n     * Might emit an {Approval} event."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 654,
												"src": "9879:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 654,
												"src": "9902:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 654,
												"src": "9927:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9927:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9869:78:1"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9965:0:1"
									},
									"scope": 677,
									"src": "9845:485:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "11033:2:1",
										"statements": []
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "10336:573:1",
										"text": "@dev Hook that is called before any transfer of tokens. This includes\nminting and burning.\n     * Calling conditions:\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\nwill be transferred to `to`.\n- when `from` is zero, `amount` tokens will be minted for `to`.\n- when `to` is zero, `amount` of ``from``'s tokens will be burned.\n- `from` and `to` are never both zero.\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "10953:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10953:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "10975:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10975:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "10995:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10995:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10943:72:1"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11033:0:1"
									},
									"scope": 677,
									"src": "10914:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "11741:2:1",
										"statements": []
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "11041:577:1",
										"text": "@dev Hook that is called after any transfer of tokens. This includes\nminting and burning.\n     * Calling conditions:\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\nhas been transferred to `to`.\n- when `from` is zero, `amount` tokens have been minted for `to`.\n- when `to` is zero, `amount` of ``from``'s tokens have been burned.\n- `from` and `to` are never both zero.\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 676,
												"src": "11661:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11661:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 676,
												"src": "11683:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11683:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 676,
												"src": "11703:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11651:72:1"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11741:0:1"
									},
									"scope": 677,
									"src": "11623:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 678,
							"src": "77:11668:1"
						}
					],
					"src": "0:11745:1"
				},
				"id": 1
			}
		}
	}
}